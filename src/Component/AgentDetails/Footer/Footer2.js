import React, { useState, useEffect } from "react";
import styles from "../Footer/Footer2.module.css";
import { useNavigate, useLocation } from "react-router-dom";
import ModalChat from '../../ModalChat/ModalChat';
import Plan from '../../Plan/Plan'
import ChatBox from '../../ChatBox/ChatBox';
import Modal from "../../Modal/Modal";
const Footer2 = () => {
  const [activeTab, setActiveTab] = useState("home");
  const [open, setOpen] = useState(false);
  const [open2, setOpen2] = useState(false);
  const navigate = useNavigate();
  const location = useLocation();

  useEffect(() => {
    // Set active tab based on current path
    if (location.pathname.includes("/dashboard")) {
      setActiveTab("home");
    } else if (location.pathname.includes("/calendar")) {
      setActiveTab("calendar");
    } else if (location.pathname.includes("/info")) {
      setActiveTab("info");
    }
  }, [location.pathname]);

  const handleTabClick = (tab, path) => {
    setActiveTab(tab);
    navigate(path);
  };
  return (
    <div>
      <div className={styles.navbar}>
        <button
          className={`${styles.tab} ${activeTab === "home" ? styles.active : ""
            }`}
          onClick={() => handleTabClick("home", "/dashboard")}
        >
          <span className={styles.icon}>
            <svg
              width="28"
              height="31"
              viewBox="0 0 28 31"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                fill-rule="evenodd"
                clip-rule="evenodd"
                d="M27.0129 12.0915L26.0129 22.735C26.0129 26.7616 22.7184 30.0551 18.6928 30.0551H8.32012C4.29455 30.0551 1 26.7616 1 22.735L0 12.0915C0 10.1557 0.819416 8.49008 2.35197 7.30913L9.82008 1.55335C12.0221 -0.144085 14.9899 -0.144085 17.1918 1.55335L24.66 7.30913C26.1925 8.49008 27.0129 10.1557 27.0129 12.0915ZM8.99055 23.6339C8.57935 23.6339 8.24662 23.3012 8.24662 22.89C8.24662 22.4788 8.57935 22.146 8.99055 22.146H18.0224C18.4336 22.146 18.7663 22.4788 18.7663 22.89C18.7663 23.3012 18.4336 23.6339 18.0224 23.6339H8.99055Z"
                fill="#5F33E1"
              />
            </svg>
          </span>
        </button>

        <button
          className={`${styles.tab} ${activeTab === "calendar" ? styles.active : ""
            }`}
          onClick={() => handleTabClick("calendar", "/calendar")}
        >
          <span className={styles.icon}>
            <svg
              width="26"
              height="31"
              viewBox="0 0 26 31"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M25.9997 8.82162V6.1039C26.001 5.20803 25.6546 4.34916 25.0361 3.71493C24.4164 3.08207 23.5771 2.72729 22.7017 2.72866H20.7421V1.09586C20.7421 0.490382 20.2629 0 19.6713 0C19.0796 0 18.6005 0.490382 18.6005 1.09586V2.72866H14.0708V1.09586C14.0708 0.490382 13.5916 0 12.9999 0C12.4083 0 11.9291 0.490382 11.9291 1.09586V2.72866H7.39944V1.09586C7.39944 0.490382 6.92025 0 6.32861 0C5.73696 0 5.25778 0.490382 5.25778 1.09586V2.72866H3.29815C2.42275 2.7273 1.58349 3.08207 0.963748 3.71493C0.345341 4.34916 -0.00133459 5.20803 3.86125e-06 6.1039V8.82162H25.9997Z"
                fill="#5F33E1"
              />
              <path
                d="M3.86125e-06 11.0156V26.9604C-0.00133459 27.8563 0.345341 28.7152 0.963748 29.3494C1.58349 29.9822 2.42275 30.337 3.29815 30.3357H22.7015C23.5769 30.337 24.4162 29.9822 25.0359 29.3494C25.6543 28.7152 26.001 27.8563 25.9997 26.9604V11.0156H3.86125e-06ZM7.30561 27.3069H5.35404C4.76777 27.2987 4.29794 26.8096 4.29794 26.211C4.29794 25.6124 4.76777 25.1234 5.35404 25.1152H7.30695H7.30561C7.89054 25.1248 8.36037 25.6124 8.36037 26.211C8.36037 26.8096 7.89054 27.2973 7.30561 27.3069ZM7.30561 21.7715H5.35404C4.76777 21.7633 4.29794 21.2742 4.29794 20.6756C4.29794 20.077 4.76777 19.588 5.35404 19.5798H7.30695H7.30561C7.89054 19.588 8.3617 20.077 8.3617 20.6756C8.3617 21.2742 7.89188 21.7633 7.30561 21.7715ZM7.30561 16.2361H5.35404C4.76777 16.2279 4.29794 15.7389 4.29794 15.1403C4.29794 14.5417 4.76777 14.0526 5.35404 14.0444H7.30695H7.30561C7.89054 14.054 8.36037 14.5417 8.36037 15.1403C8.36037 15.7389 7.89054 16.2265 7.30561 16.2361ZM13.9434 27.3069H11.9905C11.4055 27.2987 10.9344 26.8096 10.9344 26.211C10.9344 25.6124 11.4055 25.1234 11.9905 25.1152H13.9434C14.5283 25.1248 14.9968 25.6124 14.9968 26.211C14.9968 26.8096 14.5283 27.2973 13.9434 27.3069ZM13.9434 21.7715H11.9905C11.4055 21.7633 10.9344 21.2742 10.9344 20.6756C10.9344 20.077 11.4055 19.588 11.9905 19.5798H13.9434C14.5283 19.588 14.9981 20.077 14.9981 20.6756C14.9981 21.2742 14.5283 21.7633 13.9434 21.7715ZM13.9434 16.2361H11.9905C11.4055 16.2279 10.9344 15.7389 10.9344 15.1403C10.9344 14.5417 11.4055 14.0526 11.9905 14.0444H13.9434C14.5283 14.054 14.9968 14.5417 14.9968 15.1403C14.9968 15.7389 14.5283 16.2265 13.9434 16.2361ZM20.6466 27.3069H18.6937C18.1074 27.2987 17.6376 26.8096 17.6376 26.211C17.6376 25.6124 18.1087 25.1234 18.6937 25.1152H20.6466H20.6452C21.2302 25.1248 21.7 25.6124 21.7 26.211C21.7 26.8096 21.2302 27.2973 20.6452 27.3069H20.6466ZM20.6466 21.7715H18.6937C18.1074 21.7633 17.6376 21.2742 17.6376 20.6756C17.6376 20.077 18.1087 19.588 18.6937 19.5798H20.6466H20.6452C21.2315 19.588 21.7013 20.077 21.7013 20.6756C21.7013 21.2742 21.2315 21.7633 20.6452 21.7715H20.6466ZM20.6466 16.2361H18.6937C18.1074 16.2279 17.6376 15.7389 17.6376 15.1403C17.6376 14.5417 18.1087 14.0526 18.6937 14.0444H20.6466H20.6452C21.2302 14.054 21.7 14.5417 21.7 15.1403C21.7 15.7389 21.2302 16.2265 20.6452 16.2361H20.6466Z"
                fill="#B5A0F3"
              />
            </svg>
          </span>
        </button>

        <div className={styles.createWrapper} onClick={() => setOpen(true)}>
          <button className={styles.createBtn}>
            <span className={styles.createIcon}>ï¼‹</span>
            <span className={styles.createText}>Create</span>
          </button>
        </div>

        <button
          className={`${styles.tab} ${activeTab === "info" ? styles.active : ""
            }`}

        >
          <span className={styles.icon} onClick={() => setOpen2(true)}>
            <svg width="30" height="29" viewBox="0 0 30 29" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path d="M28.0681 28.1483C28.1243 28.2576 28.073 28.3399 28.0376 28.378C28.0021 28.4173 27.9239 28.4751 27.8115 28.4259L20.9437 25.4864C20.4403 25.2714 19.8917 25.2174 19.3565 25.3316C18.3192 25.5527 17.2464 25.6645 16.1664 25.6645C12.909 25.6645 9.84343 24.6646 7.46094 22.838L8.48972 22.397C8.82694 22.2533 9.19349 22.2164 9.55148 22.2926C10.6487 22.526 11.7825 22.6451 12.9236 22.6451C16.5854 22.6451 20.0311 21.445 22.625 19.2646C25.2422 17.0658 26.684 14.135 26.684 11.0136C26.684 10.0838 26.5545 9.17105 26.3065 8.28906C28.0671 10.1685 29.0495 12.5086 29.0495 14.9149C29.0495 17.4834 27.945 19.9696 25.9375 21.9168C25.505 22.3369 25.3999 22.9769 25.676 23.5112L28.0681 28.1483Z" fill="#6524EB" />
              <path d="M9.69388 21.1666C10.7312 21.3877 11.804 21.4995 12.884 21.4995C19.9877 21.4995 25.768 16.6768 25.768 10.7497C25.768 4.82266 19.9886 0 12.884 0C5.78029 0 0 4.82266 0 10.7497C0 13.3183 1.10451 15.8045 3.11197 17.7517C3.5445 18.1718 3.64959 18.8118 3.37345 19.3461L0.982349 23.9832C0.926145 24.0926 0.977462 24.1749 1.01289 24.2129C1.04833 24.2522 1.12652 24.31 1.23893 24.2608L8.10678 21.3213C8.61018 21.1063 9.15873 21.0523 9.69388 21.1666ZM12.5297 2.41272C13.1809 2.41272 13.7112 2.94583 13.7112 3.60055C13.7112 4.25527 13.1809 4.78839 12.5297 4.78839C11.8785 4.78839 11.3482 4.25527 11.3482 3.60055C11.3482 2.94583 11.8785 2.41272 12.5297 2.41272ZM11.7123 16.4826V8.72155C11.7123 8.63188 11.6854 8.54589 11.6353 8.47219L11.1992 7.83344H13.2042C13.6844 7.83344 14.0754 8.22653 14.0754 8.7093V16.3757C14.0754 16.4469 14.0925 16.5169 14.1255 16.5808L14.5323 17.3584H12.5847C12.1045 17.3584 11.7136 16.9653 11.7136 16.4826L11.7123 16.4826Z" fill="#B5A0F3" />
            </svg>

          </span>
        </button>
      </div>
      {/* Plan Modal Start */}
      <Modal isOpen={open} onClose={() => setOpen(false)}>
        <Plan />
      </Modal>
      {/* Plan Modal End */}
      {/* Chat Modal End */}
      <ModalChat isOpen2={open2} onClose2={() => setOpen2(false)}>
        <ChatBox />
      </ModalChat>
      {/* Chat Modal End */}
    </div>
  );
};

export default Footer2;
